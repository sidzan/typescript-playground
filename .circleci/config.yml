version: 2.1
executors:
  docker-publisher:
    docker:
      - image: circleci/node:8
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Setup Dependencies
          command: npm install
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
    publish-latest:
      executor: docker-publisher
      steps:
        - attach_workspace:
            at: /tmp/workspace
        - setup_remote_docker
        - run:
            name: Load archived Docker image
            command: docker load -i /tmp/workspace/image.tar
        - run:
            name: Publish Docker Image to Docker Hub
            command: |
              echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
              docker push $IMAGE_NAME:latest
    machine:
      enabled: true
      steps:
        - run:
            name: Deploy Over SSH
            command: |
              ssh $SSH_USER@$SSH_HOST "touch /tmp/test.txt > APPLE"
  workflows:
    version: 2
    build-master:
      jobs:
        - build:
            filters:
              branches:
                only: master
        - publish-latest:
            requires:
              - build
            filters:
              branches:
                only: master
